@model AppManager.Models.DashboardCreateViewModel

<h2>Create Dashboard</h2>
<form id="dashboard-form" asp-action="Create" method="post">
    <div class="form-group">
        <label for="DashboardName">Dashboard Name</label>
        <input asp-for="DashboardName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="SelectedDatabaseId">Select Database</label>
        <select asp-for="SelectedDatabaseId" class="form-control" id="SelectedDatabaseId">
            @foreach (var db in Model.Databases)
            {
                <option value="@db.Id">@db.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="ChartName">Chart Name</label>
        <input id="ChartName" class="form-control" placeholder="Enter chart name" />
    </div>

    <div class="form-group">
        <label for="SqlQuery">SQL Query</label>
        <textarea asp-for="SqlQuery" class="form-control" id="SqlQuery" placeholder="SELECT label_column, value_column FROM your_table"></textarea>
    </div>

    <div class="form-group">
        <label for="SelectedChartTypes">Select Chart Type</label>
        <select asp-for="SelectedChartTypes" class="form-control" id="SelectedChartTypes">
            <option value="bar">Bar</option>
            <option value="line">Line</option>
            <option value="pie">Pie</option>
        </select>
    </div>

    <button type="button" id="submit-query" class="btn btn-secondary">Add Chart</button>

    <div id="chart-preview" class="mt-4">
        <h4>Added Charts:</h4>
    </div>

    <button type="submit" class="btn btn-primary">Create Dashboard</button>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let chartIndex = 0;
        let chartsData = [];

        document.getElementById('submit-query').addEventListener('click', function () {
            const databaseId = document.getElementById('SelectedDatabaseId').value;
            const query = document.getElementById('SqlQuery').value;
            const chartType = document.getElementById('SelectedChartTypes').value;
            const chartName = document.getElementById('ChartName').value;

            if (!query || !chartType || !chartName) {
                alert("SQL query, chart type, and chart name must be entered.");
                return;
            }

            fetch('@Url.Action("GetChartData")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ DatabaseId: databaseId, Query: query })
            })
                .then(response => response.json())
                .then(data => {
                    chartIndex++;
                    const canvasId = `chartCanvas${chartIndex}`;
                    const canvasContainer = document.getElementById('chart-preview');
                    const canvasDiv = document.createElement('div');
                    canvasDiv.style.width = '100%';
                    canvasDiv.style.height = '400px';
                    canvasDiv.innerHTML = `<canvas id="${canvasId}" style="max-width: 100%; max-height: 100%;"></canvas>`;
                    canvasContainer.appendChild(canvasDiv);

                    const ctx = document.getElementById(canvasId).getContext('2d');
                    const chart = new Chart(ctx, {
                        type: chartType,
                        data: {
                            labels: data.labels,
                            datasets: [{
                                label: 'Data',
                                data: data.values,
                                backgroundColor: chartType === 'pie' ? [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 159, 64, 0.2)'
                                ] : 'rgba(75, 192, 192, 0.2)',
                                borderColor: chartType === 'pie' ? [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ] : 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: chartType !== 'pie' ? {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        } : {}
                    });

                    const chartImage = chart.toBase64Image();

                    chartsData.push({
                        chartType: chartType,
                        dataQuery: query,
                        name: chartName,
                        labels: data.labels,
                        values: data.values,
                        chartImage: chartImage
                    });
                })
                .catch(error => {
                    console.error('Error fetching chart data:', error);
                    alert('An error occurred while fetching chart data.');
                });
        });

        document.getElementById('dashboard-form').addEventListener('submit', function (e) {
            const hiddenField = document.createElement('input');
            hiddenField.type = 'hidden';
            hiddenField.name = 'ChartsData';
            hiddenField.value = JSON.stringify(chartsData);
            this.appendChild(hiddenField);
        });
    </script>
}
